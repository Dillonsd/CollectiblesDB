# Generated by Django 3.1.3 on 2020-12-06 21:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.IntegerField(default=-1, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50)),
                ('type', models.CharField(default='', max_length=20)),
                ('year', models.IntegerField(default=1900)),
                ('artist', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('userid', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=250)),
                ('phonenumber', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('cFlag', models.IntegerField()),
                ('sFlag', models.IntegerField()),
                ('website', models.CharField(max_length=50)),
            ],
            options={
                'unique_together': {('userid', 'username')},
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collection_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ComicBook',
            fields=[
                ('id', models.IntegerField(default=-1, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50)),
                ('type', models.CharField(default='', max_length=20)),
                ('year', models.IntegerField(default=1900)),
                ('author', models.CharField(max_length=50)),
                ('illustrator', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Custom',
            fields=[
                ('id', models.IntegerField(default=-1, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50)),
                ('type', models.CharField(default='', max_length=20)),
                ('year', models.IntegerField(default=1900)),
                ('description', models.CharField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderId', models.IntegerField(primary_key=True, serialize=False)),
                ('sourceAddress', models.CharField(max_length=50)),
                ('totalValue', models.IntegerField()),
                ('userID', models.IntegerField()),
                ('userName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SportCard',
            fields=[
                ('id', models.IntegerField(default=-1, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50)),
                ('type', models.CharField(default='', max_length=20)),
                ('year', models.IntegerField(default=1900)),
                ('sport', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectionName', models.CharField(max_length=50)),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDUserCollection', to='api.client')),
                ('userName', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameUserCollection', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'userName', 'collectionName')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentNo', models.IntegerField(primary_key=True, serialize=False)),
                ('totalValue', models.FloatField()),
                ('formOfPayment', models.CharField(max_length=50)),
                ('orderID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='orderIDPayment', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='ComicGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=20)),
                ('comicID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='genre', to='api.comicbook')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=20)),
                ('albumID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='genre', to='api.album')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50)),
                ('warehouseNumber', models.IntegerField(default=-1)),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDWarehouse', to='api.client')),
                ('username', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameWarehouse', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'username')},
            },
        ),
        migrations.CreateModel(
            name='Wants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectionName', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='collectionNameWants', to='api.collection')),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDwants', to='api.client')),
                ('userName', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameWants', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'userName', 'collectionName')},
            },
        ),
        migrations.CreateModel(
            name='Shipping_Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shippingMethod', models.CharField(max_length=50)),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDShipping_Method', to='api.client')),
                ('username', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameShipping_Method', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'username')},
            },
        ),
        migrations.CreateModel(
            name='Sells',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('model', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDSells', to='api.client')),
                ('username', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameSells', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'model', 'username')},
            },
        ),
        migrations.CreateModel(
            name='Moderates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminUsername', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='adminUsernameModerates', to='api.admin')),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDModerates', to='api.client')),
                ('username', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameModerates', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'username', 'adminUsername')},
            },
        ),
        migrations.CreateModel(
            name='Manages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminUsername', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='adminUsernameManages', to='api.admin')),
                ('model', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('model', 'adminUsername')},
            },
        ),
        migrations.CreateModel(
            name='Made_Of',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('order_id', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='orderIdMadeOf', to='api.order')),
            ],
            options={
                'unique_together': {('model', 'order_id')},
            },
        ),
        migrations.CreateModel(
            name='Fulfills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shippingCost', models.FloatField()),
                ('orderID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='orderIDFullfills', to='api.order')),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDFullfills', to='api.client')),
                ('userName', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='usernameFullfills', to='api.client')),
            ],
            options={
                'unique_together': {('userID', 'userName', 'orderID')},
            },
        ),
        migrations.CreateModel(
            name='Forms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_name', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='collectionNameForms', to='api.collection')),
                ('model', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('model', 'collection_name')},
            },
        ),
        migrations.CreateModel(
            name='Deals_With',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminUsername', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='adminUsernameDealsWith', to='api.admin')),
                ('orderID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='orderIDDealsWith', to='api.order')),
            ],
            options={
                'unique_together': {('orderID', 'adminUsername')},
            },
        ),
        migrations.CreateModel(
            name='Consists_Of',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectionName', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='collectionNameConsists_Of', to='api.usercollection')),
                ('model', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('userID', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='userIDConsists_Of', to='api.usercollection')),
            ],
            options={
                'unique_together': {('userID', 'model', 'collectionName')},
            },
        ),
    ]
